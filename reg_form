import tkinter as tk
from tkinter import messagebox as mb
import os
import csv

USER_DATA_FILE = 'Registration_Form_Data.csv'
HEADERS = ["Name", "Email", "Contact_No", "Password", "Attempts", "Locked", "Lock_Time"]

def submit_fields():
    username = username_entry.get()
    password = password_entry.get()
    email = email_entry.get()
    phone = phone_entry.get()

    if not username or not password or not email or not phone:
        mb.showerror("Error", "All fields are required for subtion")
        return

    # You can add your database logic here to store the user data
    print("Username:", username)
    print("Password:", password)
    print("Email:", email)
    print("Phone:", phone)



# File Handling Functions.
def save_to_file(data):
    file_exists = os.path.exists(USER_DATA_FILE)
    with open(USER_DATA_FILE, 'a', newline='') as file:
        writer = csv.writer(file)
        if not file_exists or os.path.getsize(USER_DATA_FILE) == 0:
            writer.writerow(HEADERS)
        writer.writerow(data)

def check_for_duplicates(email):
    if not os.path.exists(USER_DATA_FILE):
        return False
    with open(USER_DATA_FILE, 'r') as file:
        reader = csv.reader(file)
        next(reader)
        for row in reader:
            if row[1] == email:
                return True
    return False

def get_user_data(email):
    if not os.path.exists(USER_DATA_FILE):
        return None
    with open(USER_DATA_FILE, 'r') as file:
        reader = csv.reader(file)
        next(reader)
        for row in reader:
            if row[1] == email:
                return row
    return None

def clear_entries(entries):
    for entry in entries:
        entry.delete(0, tk.END)
    entries[0].focus()

def submit_form():
    name = root[0].get()
    email = root[1].get()
    contact = root[2].get()
    user_password = root[3].get()
    confirm_password = root[4].get()



    save_to_file([name, email, contact, user_password, 0, 'False', ''])
    
    mb.showinfo("Success", f"Registration Successful For {name}!")
    clear_entries(root)
    root[0].focus()


root = tk.Tk()
root.title("Registration Form")
root.geometry("500x500")
root.configure(bg='#F5F5DC')

username_label = tk.Label(root, text="Username",bg='#9BBC86')
username_label.pack()

username_entry = tk.Entry(root,bg='#CB6CE6')
username_entry.pack()

password_label = tk.Label(root, text="Password",bg='#9BBC86')
password_label.pack()

password_entry = tk.Entry(root, show="*",bg='#CB6CE6')
password_entry.pack()

email_label = tk.Label(root, text="Email",bg='#9BBC86')
email_label.pack()

email_entry = tk.Entry(root,bg='#CB6CE6')
email_entry.pack()

phone_label = tk.Label(root, text="Phone",bg='#9BBC86')
phone_label.pack()

phone_entry = tk.Entry(root,bg='#CB6CE6')
phone_entry.pack()

submit_button = tk.Button(root, text="Submit",bg='#9BBC86', command=submit_fields)
submit_button.pack()

clear_button = tk.Button(root, text="Clear", command=lambda: clear_entries(root), bg='lightcoral')
clear_button.pack()


root.mainloop()